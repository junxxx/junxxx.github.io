<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C on Paisen - blog for thinking</title><link>https://www.paisen.site/tags/c/</link><description>Recent content in C on Paisen - blog for thinking</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 05 Apr 2018 10:47:40 +0800</lastBuildDate><atom:link href="https://www.paisen.site/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>C Programming Language</title><link>https://www.paisen.site/post/c-programming-language/</link><pubDate>Thu, 05 Apr 2018 10:47:40 +0800</pubDate><guid>https://www.paisen.site/post/c-programming-language/</guid><description>&lt;p&gt;&lt;strong&gt;The C Programming Language&lt;/strong&gt; is the best textbook for a beginner who wants to learn C. This article mostly talks about pointers and memory in C.&lt;/p&gt;
&lt;p&gt;C&amp;rsquo;s syntax is simple but handling pointers in C is too easy to get stuck.&lt;/p&gt;
&lt;h2 id="primitive-data-types-and-sizes"&gt;Primitive data types and sizes&lt;/h2&gt;
&lt;p&gt;char, int, float, double&lt;/p&gt;
&lt;p&gt;signed, unsigned, short, long&lt;/p&gt;
&lt;p&gt;constant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-C" data-lang="C"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;%u&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;%u&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nf"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;%u&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="array"&gt;Array&lt;/h2&gt;
&lt;p&gt;Array is a continuous fixed-length address. Different data types have different sizes. &lt;code&gt;sizeof&lt;/code&gt; returns the size(how many bytes it holds to represent a data) of a data.&lt;/p&gt;</description></item></channel></rss>