<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Paisen - blog for thinking</title><link>https://www.paisen.site/post/</link><description>Recent content in Posts on Paisen - blog for thinking</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 09 May 2024 16:27:36 +0800</lastBuildDate><atom:link href="https://www.paisen.site/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Memory Implementation</title><link>https://www.paisen.site/post/memory-implementation/</link><pubDate>Thu, 09 May 2024 16:27:36 +0800</pubDate><guid>https://www.paisen.site/post/memory-implementation/</guid><description>Reference</description></item><item><title>Process Implementation</title><link>https://www.paisen.site/post/process-implementation/</link><pubDate>Thu, 09 May 2024 16:12:43 +0800</pubDate><guid>https://www.paisen.site/post/process-implementation/</guid><description>Reference</description></item><item><title>Gdb</title><link>https://www.paisen.site/post/gdb/</link><pubDate>Thu, 09 May 2024 15:24:58 +0800</pubDate><guid>https://www.paisen.site/post/gdb/</guid><description>This artice keep tracks of the most used commands of GDB
Write a classic C program.
1 2 3 4 5 #include &amp;lt;stdio.h&amp;gt; int main(int argc, char *argv[]) { printf(&amp;#34;Hello world\n&amp;#34;); } Compiler
1 gcc -o main -g main.c Debug
1 gdb main // gdb programname -p [pid] 1 2 3 4 (gdb) b main // set breakpoint (gdb) layout src // gui (gdb) p // print p/x hex (gdb) i b // list all breakpoints, you can list other info 1 2 3 4 5 6 7 8 9 10 11 12 13 ┌─test.</description></item><item><title>C</title><link>https://www.paisen.site/post/c/</link><pubDate>Thu, 09 May 2024 10:47:40 +0800</pubDate><guid>https://www.paisen.site/post/c/</guid><description/></item><item><title>Operating System</title><link>https://www.paisen.site/post/operating-system/</link><pubDate>Thu, 09 May 2024 10:46:18 +0800</pubDate><guid>https://www.paisen.site/post/operating-system/</guid><description>If there&amp;rsquo;s only one course need to learn in computer science branch, I will recommend Operating System.
Modern OS is getting more complex due to the development of hardware. More and more features are add to OS kernel. But the foundamental concepts are similar.
Most of OS are written by C, so in order to read OS, you need to learn C programming language first.
Keep in mind, from a programmer&amp;rsquo;s perspective, an OS is an implementation of hardwares(CPU, devices).</description></item><item><title>A lecture of Go</title><link>https://www.paisen.site/post/go/</link><pubDate>Sun, 29 May 2022 15:27:24 +0800</pubDate><guid>https://www.paisen.site/post/go/</guid><description>概述 串讲，是以会议形式，串讲人给同事讲一个topic。会上的其他同事，对串讲人进行相关知识的提问，以考查其对此topic的掌握程度。便于尽快</description></item><item><title>Install Snap on Centos7</title><link>https://www.paisen.site/post/install-snap/</link><pubDate>Sun, 15 May 2022 21:48:33 +0800</pubDate><guid>https://www.paisen.site/post/install-snap/</guid><description>问题 在Centos7系统上安装snap，遇到的问题记录 1 2 3 4 5 6 7 8 9 10 [centos@ip-172-26-6-67 ~]$ sudo snap install core error: system does not fully support snapd: cannot mount squashfs image using &amp;#34;squashfs&amp;#34;: ----- mount: wrong fs type, bad option, bad superblock on /dev/loop0, missing codepage or</description></item><item><title>Build your own tools</title><link>https://www.paisen.site/post/tools/</link><pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate><guid>https://www.paisen.site/post/tools/</guid><description>背景 从拥有自己的第一台电脑至今，由于工作或其他原因，我已经换过好几台电脑。每一次拿到新电脑的第一件事，就是安装各种软件以及配置开发环境。手动</description></item><item><title>A tool for testing server</title><link>https://www.paisen.site/post/ab-test/</link><pubDate>Mon, 19 Nov 2018 21:49:05 +0800</pubDate><guid>https://www.paisen.site/post/ab-test/</guid><description>让我们来对服务器做一下压力测试吧！ 本篇文章讲一下压力测试应该怎么做，压力测试过程中需要注意哪些指标，以及需要注意的事项。 首先，我们要清楚我们</description></item></channel></rss>