<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on Paisen - blog for thinking</title><link>https://www.paisen.site/categories/tech/</link><description>Recent content in Tech on Paisen - blog for thinking</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 13 Oct 2025 11:12:34 +0800</lastBuildDate><atom:link href="https://www.paisen.site/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Migrate Docker Volume From Win11 to Debian11</title><link>https://www.paisen.site/post/migrate-docker-volume-from-win11-to-debian11/</link><pubDate>Mon, 13 Oct 2025 11:12:34 +0800</pubDate><guid>https://www.paisen.site/post/migrate-docker-volume-from-win11-to-debian11/</guid><description>&lt;h2 id="backup-images-volumes-in-win11"&gt;Backup images, volumes in Win11&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-powershell" data-lang="powershell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt; &lt;span class="n"&gt;-o&lt;/span&gt; &lt;span class="n"&gt;all_images&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="py"&gt;tar&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-format&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;{{.Repository}}&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="nb"&gt;ls &lt;/span&gt;&lt;span class="n"&gt;-q&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ForEach-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-rm&lt;/span&gt; &lt;span class="n"&gt;-v&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;${_}&lt;/span&gt;&lt;span class="s2"&gt;:/volume&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;-v&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;${PWD}&lt;/span&gt;&lt;span class="s2"&gt;:/backup&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;alpine&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;-czf&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;/backup/&lt;/span&gt;&lt;span class="nv"&gt;${_}&lt;/span&gt;&lt;span class="s2"&gt;.tar.gz&amp;#34;&lt;/span&gt; &lt;span class="n"&gt;-C&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt; &lt;span class="p"&gt;.}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="nb"&gt;ps &lt;/span&gt;&lt;span class="n"&gt;-a&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;-format&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;{{.Names}}&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;ForEach-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;inspect&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Out-File&lt;/span&gt; &lt;span class="n"&gt;-Encoding&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="s2"&gt;.json&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="restore-on-debian11"&gt;Restore on Debian11&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# load images&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;docker load -i all_images.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# create volumes and restore data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;for&lt;/span&gt; f in *.tar.gz&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;%.tar.gz&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Restoring &lt;/span&gt;&lt;span class="nv"&gt;$vol&lt;/span&gt;&lt;span class="s2"&gt; ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; docker volume create &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$vol&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt; &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; docker run --rm &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="nv"&gt;$vol&lt;/span&gt;&lt;span class="s2"&gt;:/volume&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -v &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:/backup&amp;#34;&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; ubuntu sh -c &lt;span class="s2"&gt;&amp;#34;cd /volume &amp;amp;&amp;amp; tar -xzf /backup/&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="issues"&gt;Issues&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;volume already exists but was not created by Docker Compose. Use &lt;code&gt;external: true&lt;/code&gt; to use an existing volume&lt;/p&gt;</description></item><item><title>Install Docker on Win11</title><link>https://www.paisen.site/post/install-docker-on-win11/</link><pubDate>Sat, 27 Sep 2025 09:30:04 +0800</pubDate><guid>https://www.paisen.site/post/install-docker-on-win11/</guid><description>&lt;h1 id="在全新-windows-11-系统上安装并运行-docker-desktop--踩坑与解决方案"&gt;在全新 Windows 11 系统上安装并运行 Docker Desktop —— 踩坑与解决方案&lt;/h1&gt;
&lt;h2 id="背景"&gt;背景&lt;/h2&gt;
&lt;p&gt;我最近在一台新装的 &lt;strong&gt;Windows 11 专业版 (24H2)&lt;/strong&gt; 系统上尝试安装 &lt;strong&gt;Docker Desktop&lt;/strong&gt;。
这是一台 AMD Ryzen 平台的电脑，BIOS 已经开启了虚拟化（SVM/AMD-V），系统安装时也使用了 &lt;strong&gt;默认设置&lt;/strong&gt;。&lt;/p&gt;</description></item><item><title>How to Read a Book</title><link>https://www.paisen.site/post/how-to-read-a-book/</link><pubDate>Sat, 15 Jun 2024 16:53:43 +0800</pubDate><guid>https://www.paisen.site/post/how-to-read-a-book/</guid><description>&lt;p&gt;如果有人问你，如何阅读一本书？&lt;/p&gt;
&lt;p&gt;那还不简单，不是只要有眼睛能认字就行么，一个字一个字从头到尾地读呗！&lt;/p&gt;
&lt;p&gt;如果，你还是抱着这种心态去阅读的话，那么你应该认真地读完这篇文章。&lt;/p&gt;</description></item><item><title>How to Be a Good Reader</title><link>https://www.paisen.site/post/how-to-be-a-good-reader/</link><pubDate>Sat, 15 Jun 2024 15:57:58 +0800</pubDate><guid>https://www.paisen.site/post/how-to-be-a-good-reader/</guid><description>&lt;h2 id="主动阅读与被动阅读"&gt;主动阅读与被动阅读&lt;/h2&gt;
&lt;p&gt;在阅读的过程中，你是否有过如下的经历？&lt;/p&gt;
&lt;p&gt;随手打开一本书，翻了没有几页，看了后面的，忘记前面的？甚至刚刚打开一本书就开始犯困。&lt;/p&gt;
&lt;p&gt;但是，有的时候，拿到一本言情或侦探小说，可以废寝忘食地不知疲倦地读完。&lt;/p&gt;</description></item><item><title>The Way to JS</title><link>https://www.paisen.site/post/the-way-to-js/</link><pubDate>Wed, 12 Jun 2024 23:16:53 +0800</pubDate><guid>https://www.paisen.site/post/the-way-to-js/</guid><description>&lt;p&gt;这是一篇由GPT4o生成的学习JS计划。&lt;/p&gt;
&lt;p&gt;既然你已经有PHP面向对象编程经验和C语言基础，可以利用这些知识快速学习JavaScript。以下是一个优化后的学习计划，重点在于快速掌握JavaScript的独特之处，并尽快上手实际项目。&lt;/p&gt;</description></item><item><title>Memory Implementation</title><link>https://www.paisen.site/post/memory-implementation/</link><pubDate>Thu, 09 May 2024 16:27:36 +0800</pubDate><guid>https://www.paisen.site/post/memory-implementation/</guid><description>&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Process Implementation</title><link>https://www.paisen.site/post/process-implementation/</link><pubDate>Thu, 09 May 2024 16:12:43 +0800</pubDate><guid>https://www.paisen.site/post/process-implementation/</guid><description>&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Operating System</title><link>https://www.paisen.site/post/operating-system/</link><pubDate>Thu, 09 May 2024 10:46:18 +0800</pubDate><guid>https://www.paisen.site/post/operating-system/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As a human being living in the 21st century, it&amp;rsquo;s possible you might not know what a OS is, but if you say you didn&amp;rsquo;t use any OS, that&amp;rsquo;s absolutely impossible! If there&amp;rsquo;s only one course need to learn in computer science branch, I will recommend &lt;strong&gt;Operating System&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This article is a summary of the important concepts in a modern multi-users, time-sharing, interactive OS, like for a instance, Unix.&lt;/p&gt;</description></item><item><title>System Design</title><link>https://www.paisen.site/post/system-design/</link><pubDate>Wed, 06 Jul 2022 09:48:51 +0800</pubDate><guid>https://www.paisen.site/post/system-design/</guid><description>&lt;p&gt;Technical concepts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; APIs&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Database(SQL vs NoSQL)&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Scaling&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; CAP Theorem&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Web authentication and basic security&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Load balancers&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Caching&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Message queues&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Indexing&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Failover&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Replication&lt;/li&gt;
&lt;li&gt;&lt;input disabled="" type="checkbox"&gt; Consistent hashing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="apis"&gt;APIs&lt;/h2&gt;
&lt;h3 id="restful"&gt;RESTful&lt;/h3&gt;
&lt;h3 id="rpc"&gt;RPC&lt;/h3&gt;
&lt;h2 id="sql-vs-nosql"&gt;SQL vs NoSQL&lt;/h2&gt;
&lt;h2 id="scaling"&gt;Scaling&lt;/h2&gt;
&lt;h2 id="cache"&gt;Cache&lt;/h2&gt;
&lt;h2 id="indexing"&gt;Indexing&lt;/h2&gt;
&lt;p&gt;In order to improve the efficient to fetch a item from a large database, we use index.&lt;/p&gt;
&lt;h2 id="replication"&gt;Replication&lt;/h2&gt;
&lt;h2 id="consistent-hashing"&gt;Consistent hashing&lt;/h2&gt;</description></item><item><title>Install Snap on Centos7</title><link>https://www.paisen.site/post/install-snap/</link><pubDate>Sun, 15 May 2022 21:48:33 +0800</pubDate><guid>https://www.paisen.site/post/install-snap/</guid><description>&lt;h2 id="问题"&gt;问题&lt;/h2&gt;
&lt;p&gt;在Centos7系统上安装&lt;code&gt;snap&lt;/code&gt;，遇到的问题记录&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;[centos@ip-172-26-6-67 ~]$ sudo snap install core
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;error: system does not fully support snapd: cannot mount squashfs image using &amp;#34;squashfs&amp;#34;: -----
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; mount: wrong fs type, bad option, bad superblock on /dev/loop0,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; missing codepage or helper program, or other error
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; In some cases useful info is found in syslog - try
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; dmesg | tail or so.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; -----
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Google一圈之后，解决方案如下：&lt;/p&gt;</description></item><item><title>Deploy Hugo on Github Page</title><link>https://www.paisen.site/post/deploy-hugo-on-github-page/</link><pubDate>Mon, 09 May 2022 22:11:32 +0800</pubDate><guid>https://www.paisen.site/post/deploy-hugo-on-github-page/</guid><description>&lt;p&gt;&lt;a href="https://gohugo.io/"&gt;Hugo&lt;/a&gt; is a framework written with Golang for building website.&lt;/p&gt;
&lt;p&gt;I told my wife I wrote something on my blog. After heard that, she said she wants to build a blog and start writing. So I spent a few hours on setting up a local hugo site and deployed it on Github pages.&lt;/p&gt;
&lt;p&gt;Here are all the thing you need to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href="https://github.com/"&gt;github&lt;/a&gt; account, if you didn&amp;rsquo;t have one, you need to sign up&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; installed on your local machine&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gohugo.io/installation/"&gt;Install hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Head over to GitHub and create a new public repository named username.github.io, where username is your username (or organization name) on GitHub&lt;/li&gt;
&lt;li&gt;Generate a website on local machine&lt;/li&gt;
&lt;li&gt;Push your local reposity to github&lt;/li&gt;
&lt;li&gt;Add a github workflow&lt;/li&gt;
&lt;li&gt;Config reposity&amp;rsquo;s page setting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If everything goes well, you will see your blog online &lt;a href="https://YourGithubUsername.github.io/"&gt;https://YourGithubUsername.github.io/&lt;/a&gt;&lt;/p&gt;</description></item><item><title>A tool for testing server</title><link>https://www.paisen.site/post/ab-test/</link><pubDate>Mon, 19 Nov 2018 21:49:05 +0800</pubDate><guid>https://www.paisen.site/post/ab-test/</guid><description>&lt;p&gt;让我们来对服务器做一下压力测试吧！&lt;br&gt;
本篇文章讲一下压力测试应该怎么做，压力测试过程中需要注意哪些指标，以及需要注意的事项。&lt;br&gt;
首先，我们要清楚我们进行压测的目的是什么。是为了找出服务的性能瓶颈，还是为了检验当前服务能否扛住xxx量的并发？
俗话说，“不打无准备之仗”，首先要根据压测目的出一个可行的书面方案。&lt;br&gt;
下面是一个方案模板&lt;/p&gt;</description></item><item><title>Gdb</title><link>https://www.paisen.site/post/gdb/</link><pubDate>Thu, 12 Jul 2018 15:24:58 +0800</pubDate><guid>https://www.paisen.site/post/gdb/</guid><description>&lt;p&gt;This article keep tracks of the most used commands of GDB&lt;/p&gt;
&lt;p&gt;Write a classic C program with your favoriate editor and save it as &lt;code&gt;main.c&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-c" data-lang="c"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nf"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;Hello world&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Compile it with &lt;code&gt;gcc&lt;/code&gt;, which is a popular c/c++ compiler on linux.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gcc -o main -g main.c 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Debug with &lt;code&gt;gdb&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gdb main // gdb programname -p &lt;span class="o"&gt;[&lt;/span&gt;pid&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb) b main // set breakpoint
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb) layout src // gui
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb) p // print p/x hex
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb) i b // list all breakpoints, you can list other info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;┌─test.c───────────────────────────────────────────────────┐
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 3 int main(int argc, char *argv[]) { │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│B+&amp;gt;4 printf(&amp;#34;Hello world\n&amp;#34;); │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;│ 5 } │
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;└──────────────────────────────────────────────────────────┘
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;process 31551 In: main L4 PC: 0x555555555144
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb) r
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Starting program: /home/junxxx/Workspace/the_c_language/test
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Breakpoint 1, main (argc=1, argv=0x7fffffffe338)
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; at test.c:4
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;(gdb)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Abbreviation&lt;/th&gt;
 &lt;th&gt;Command&lt;/th&gt;
 &lt;th&gt;Explanation&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;b&lt;/td&gt;
 &lt;td&gt;break&lt;/td&gt;
 &lt;td&gt;break [PROBE_MODIFIER] [LOCATION] [thread THREADNUM] [if CONDITION]&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;c&lt;/td&gt;
 &lt;td&gt;continue&lt;/td&gt;
 &lt;td&gt;conntinue [N]&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;s&lt;/td&gt;
 &lt;td&gt;step&lt;/td&gt;
 &lt;td&gt;step [N]&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;n&lt;/td&gt;
 &lt;td&gt;next&lt;/td&gt;
 &lt;td&gt;next [N]&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;p&lt;/td&gt;
 &lt;td&gt;print&lt;/td&gt;
 &lt;td&gt;print [[OPTION]&amp;hellip; &amp;ndash;] [/FMT] [EXP]&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;i&lt;/td&gt;
 &lt;td&gt;info, inf&lt;/td&gt;
 &lt;td&gt;use help i to check out info&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://sourceware.org/gdb/current/onlinedocs/gdb.html/"&gt;Debugging with GDB&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>